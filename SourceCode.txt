There are a lot of Files for FrontEnd as well Backend. It's very difficult to put all the code.
GitHub Link will be shared, Please have all the codes from there.

I am putting only Few code here and everything will be on my gitHub account.

************ShowPokemon.js*************
/* eslint-disable react/prop-types */
import React, { useEffect } from 'react';
import { Link } from 'react-router-dom';
import { connect } from 'react-redux';
import PropTypes from 'prop-types';
import { getPokemon } from '../redux/actions';
import '../styles/ShowPokemon.css';

const ShowPokemon = ({ pokemon: { pokemon, loading }, getPokemon, match }) => {
  useEffect(() => {
    const { id } = match.params;
    getPokemon(id);
    // eslint-disable-next-line
  }, [loading]);
  return pokemon && loading === null ? <h1>loading...</h1> : (
    <div className="row">
      <div className="col-md-6 poke-img">
        <h2>{pokemon.name}</h2>
        <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon.id}.png`} alt="img" style={{ width: '25rem' }} />
      </div>
      <div className="col-md-6 card poke-card" style={{ width: '35rem' }}>
        <div className="height">
          <h3>HEIGHT</h3>
          <p>{pokemon.height}</p>
        </div>
        <div className="weight">
          <h3>WEIGHT</h3>
          <p>{pokemon.weight}</p>
        </div>
        <div className="experience">
          <h3>XP</h3>
          <p>{pokemon.base_experience}</p>
        </div>
        <div className="abilities">
          <h3>ABILITIES</h3>
          {pokemon.abilities ? pokemon.abilities.map(ab => <span className="ability" key={ab.ability.name}>{ab.ability.name}</span>) : 'undefined' }
        </div>
        <div className="types">
          <h3>Type</h3>
          {pokemon.types ? pokemon.types.map(type => <span className="type" key={type.type.name}>{type.type.name}</span>) : 'undefined' }
        </div>
      </div>
      <div className="moves mt-3 p-2 card">
        <h3>MOVES</h3>
        <div className="list-moves">
          {pokemon.moves ? pokemon.moves.map(move => <span className="move" key={move.move.name}>{move.move.name}</span>) : 'undefined' }
        </div>
      </div>
      <Link to="/" className="text-center"><button type="button">Back to list</button></Link>
    </div>
  );
};

ShowPokemon.propTypes = {
  pokemon: PropTypes.shape({}).isRequired,
  getPokemon: PropTypes.func.isRequired,
};

const mapStateToProp = state => ({
  pokemon: state.pokemon,
});

export default connect(mapStateToProp, { getPokemon })(ShowPokemon);


***********PokemonList.js**********

/* eslint-disable react/forbid-prop-types */
import React, { useEffect } from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
import { getPokemons, changeFilter } from '../redux/actions';
import Pokemon from '../components/Pokemon';
import CategoryFilter from '../components/CategoryFilter';

const PokemonList = ({
  getPokemons, pokemons, changeFilter, filter,
}) => {
  useEffect(() => {
    getPokemons();
    // eslint-disable-next-line
  }, []);

  const handleFilterChange = e => {
    const { value } = e.target;
    changeFilter(value);
  };

  const filteredPokemons = () => (filter === 'ALL' ? pokemons : pokemons.filter(pokemon => {
    const arr = pokemon.types;

    for (let i = 0; i < arr.length; i += 1) {
      if (arr[i].type.name === filter) return true;
    }
    return false;
  }));

  return pokemons === null ? <h1>Loading....</h1> : (
    <div>
      <CategoryFilter handleChange={handleFilterChange} />
      {filteredPokemons().map(pokemon => (
        <Pokemon key={pokemon.id} pokemon={pokemon} />
      ))}
    </div>
  );
};

PokemonList.propTypes = {
  pokemons: PropTypes.array.isRequired,
  getPokemons: PropTypes.func.isRequired,
  filter: PropTypes.string.isRequired,
  changeFilter: PropTypes.func.isRequired,
};

const mapStateToProps = state => ({
  pokemons: state.pokemon.pokemons,
  filter: state.filter,
});

export default connect(mapStateToProps, { getPokemons, changeFilter })(PokemonList);

